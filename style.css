document.addEventListener('DOMContentLoaded', () => {
  const languageButtons = document.querySelectorAll('.lang-switch button');
  const languageElements = document.querySelectorAll('[data-lang]');
  const selectElements = document.querySelectorAll('select');
  const form = document.getElementById('checklist-form');
  const tgToken = 'YOUR_TELEGRAM_BOT_TOKEN'; // <-- –≤—Å—Ç–∞–≤—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω
  const chatId = 'YOUR_CHAT_ID';             // <-- –≤—Å—Ç–∞–≤—å —Å–≤–æ–π —á–∞—Ç ID

  const langData = {
    ru: {
      default: '‚Äî',
      done: '–°–¥–µ–ª–∞–Ω–æ',
      not_done: '–ù–µ —Å–¥–µ–ª–∞–Ω–æ',
      not_selected: '‚Äî –ù–µ –≤—ã–±—Ä–∞–Ω–æ ‚Äî',
    },
    en: {
      default: '‚Äî',
      done: 'Done',
      not_done: 'Not done',
      not_selected: '‚Äî Not selected ‚Äî',
    },
    vi: {
      default: '‚Äî',
      done: 'ƒê√£ l√†m',
      not_done: 'Ch∆∞a l√†m',
      not_selected: '‚Äî Ch∆∞a ch·ªçn ‚Äî',
    }
  };

  const translations = {
    ru: {},
    en: {},
    vi: {}
  };

  let currentLang = document.documentElement.lang || 'ru';

  function switchLanguage(lang) {
    currentLang = lang;
    document.documentElement.lang = lang;

    languageElements.forEach(el => {
      const key = el.getAttribute('data-lang');
      if (el.tagName === 'OPTION' || el.tagName === 'SELECT') return;
      el.textContent = translations[lang][key] || el.textContent;
    });

    updateAllSelects();
  }

  function updateAllSelects() {
    document.querySelectorAll('select.qty').forEach(select => {
      const currentValue = select.value;
      select.innerHTML = ''; // –û—á–∏—Å—Ç–∏—Ç—å

      const optionDefault = document.createElement('option');
      optionDefault.value = '';
      optionDefault.textContent = langData[currentLang].default;
      select.appendChild(optionDefault);

      const option1 = document.createElement('option');
      option1.value = 'done';
      option1.textContent = langData[currentLang].done;
      select.appendChild(option1);

      const option2 = document.createElement('option');
      option2.value = 'not_done';
      option2.textContent = langData[currentLang].not_done;
      select.appendChild(option2);

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
      if (currentValue) select.value = currentValue;
    });
  }

  form.addEventListener('submit', async (e) => {
    e.preventDefault();

    const name = document.getElementById('name')?.value || '‚Äî';
    const date = document.getElementById('date')?.value || '‚Äî';
    const sections = document.querySelectorAll('.section');
    let message = `üìù Checklist\nüë§ Name: ${name}\nüìÖ Date: ${date}\n\n`;

    sections.forEach(section => {
      const sectionTitle = section.querySelector('h3')?.textContent.trim() || '';
      const selects = section.querySelectorAll('select.qty');
      const labels = section.querySelectorAll('label.check-label');
      const comment = section.querySelector('textarea')?.value || '';
      message += `üìå ${sectionTitle}\n`;

      selects.forEach((select, index) => {
        const label = labels[index]?.textContent.trim() || '';
        const value = select.value ? langData.en[select.value] : langData.en.default;
        message += `‚Ä¢ ${label}: ${value}\n`;
      });

      if (comment.trim()) {
        message += `üí¨ Comment: ${comment.trim()}\n`;
      }

      message += `\n`;
    });

    const url = `https://api.telegram.org/bot${tgToken}/sendMessage`;
    const payload = {
      chat_id: chatId,
      text: message,
      parse_mode: 'HTML'
    };

    try {
      const res = await fetch(url, {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify(payload)
      });

      if (res.ok) {
        alert('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
        form.reset();
        updateAllSelects();
      } else {
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error);
      alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è');
    }
  });

  languageButtons.forEach(btn => {
    btn.addEventListener('click', () => {
      switchLanguage(btn.dataset.lang);
    });
  });

  updateAllSelects(); // –ø–µ—Ä–≤–∏—á–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
});
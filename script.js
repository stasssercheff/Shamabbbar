const BOT_TOKEN = '6420665890:AAFRBCqLguAk43O3VVnUsaS3-3eZ4q7L8m4';
const CHAT_ID = '@checklist_qla';

let currentLang = 'ru';

// –ü–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π
const positionTranslations = {
  barista: { ru: "–ë–∞—Ä–∏—Å—Ç–∞", en: "Barista", vi: "Barista" },
  waiter: { ru: "–û—Ñ–∏—Ü–∏–∞–Ω—Ç", en: "Waiter", vi: "Ph·ª•c v·ª•" },
  cashier: { ru: "–ö–∞—Å—Å–∏—Ä", en: "Cashier", vi: "Thu ng√¢n" },
  order: { ru: "–ó–∞–∫–∞–∑", en: "Order", vi: "ƒê∆°n h√†ng" },
  "select-placeholder": { ru: "‚Äî", en: "‚Äî", vi: "‚Äî" }
};

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞
function switchLanguage(lang) {
  currentLang = lang;
  document.documentElement.lang = lang;

  document.querySelectorAll('[data-ru]').forEach(el => {
    el.textContent = el.getAttribute(`data-${lang}`);
  });

  // –û–±–Ω–æ–≤–ª—è–µ–º placeholder'—ã –≤ <select>
  document.querySelectorAll('select').forEach(select => {
    const firstOption = select.options[0];
    if (firstOption && firstOption.dataset.default === "true") {
      firstOption.textContent = positionTranslations["select-placeholder"][lang];
    }
  });

  // –ü–µ—Ä–µ–≤–æ–¥–∏–º <option> –≤ —Å–µ–ª–µ–∫—Ç–æ—Ä–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π
  document.querySelectorAll('#position option[data-key]').forEach(opt => {
    const key = opt.dataset.key;
    if (positionTranslations[key]) {
      opt.textContent = positionTranslations[key][lang];
    }
  });

  generateChecklist();
  restoreFormState();
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ–∫–ª–∏—Å—Ç–∞ –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
document.getElementById('position').addEventListener('change', function () {
  const selected = this.value;
  document.querySelectorAll('.checklist-section').forEach(section => {
    section.style.display = 'none';
  });
  if (selected) {
    document.getElementById(`checklist-${selected}`).style.display = 'block';
  }
  saveFormState();
});

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –¥–∞—Ç–∞
document.addEventListener("DOMContentLoaded", function () {
  const dateInput = document.getElementById("date");
  const today = new Date();
  const formattedDate = today.toISOString().split('T')[0];
  dateInput.value = formattedDate;

  restoreFormState();
});

// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ä–º—É
function saveFormState() {
  const formData = {
    name: document.getElementById("name").value,
    date: document.getElementById("date").value,
    position: document.getElementById("position").value,
    selects: {},
    comments: {}
  };

  document.querySelectorAll(".checklist-section").forEach(section => {
    section.querySelectorAll("select").forEach(select => {
      formData.selects[select.id] = select.value;
    });
    section.querySelectorAll("textarea").forEach(textarea => {
      formData.comments[textarea.id] = textarea.value;
    });
  });

  localStorage.setItem("checklistForm", JSON.stringify(formData));
}

// –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ—Ä–º—É
function restoreFormState() {
  const data = JSON.parse(localStorage.getItem("checklistForm"));
  if (!data) return;

  document.getElementById("name").value = data.name || '';
  document.getElementById("date").value = data.date || '';
  document.getElementById("position").value = data.position || '';

  document.querySelectorAll('.checklist-section').forEach(section => {
    section.style.display = 'none';
  });

  if (data.position) {
    const section = document.getElementById(`checklist-${data.position}`);
    if (section) section.style.display = 'block';
  }

  for (const id in data.selects) {
    const select = document.getElementById(id);
    if (select) select.value = data.selects[id];
  }

  for (const id in data.comments) {
    const textarea = document.getElementById(id);
    if (textarea) textarea.value = data.comments[id];
  }
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Telegram-—Å–æ–æ–±—â–µ–Ω–∏—è
function generateChecklist() {
  const name = document.getElementById("name").value || '‚Äî';
  const date = document.getElementById("date").value || '‚Äî';
  const position = document.getElementById("position").value;

  const section = document.getElementById(`checklist-${position}`);
  if (!section) return;

  const checklistTitle = positionTranslations[position]?.en || "Checklist";

  let message = `üë§ Name: ${name}\nüìÖ Date: ${date}\nüìå Position: ${checklistTitle}\n\n`;

  section.querySelectorAll(".item-row").forEach(row => {
    const label = row.querySelector("label")?.textContent.trim() || "";
    const select = row.querySelector("select");
    const value = select?.value || "‚Äî";
    message += `‚Ä¢ ${label}: ${value === "" ? "‚Äî" : value}\n`;
  });

  const comment = section.querySelector("textarea")?.value.trim();
  if (comment) {
    message += `\nüí¨ Comment:\n${comment}`;
  }

  return message;
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
function sendToTelegram() {
  const msg = generateChecklist();
  if (!msg) return;

  fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json"
    },
    body: JSON.stringify({
      chat_id: CHAT_ID,
      text: msg,
      parse_mode: "HTML"
    })
  }).then(res => {
    if (res.ok) {
      alert("Checklist sent successfully!");
      localStorage.removeItem("checklistForm");
      window.location.reload();
    } else {
      alert("Failed to send. Try again.");
    }
  }).catch(() => {
    alert("Error occurred during sending.");
  });
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ
document.getElementById("submit-btn").addEventListener("click", () => {
  saveFormState();
  sendToTelegram();
});